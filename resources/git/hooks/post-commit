#!/usr/bin/env node

/*
 * Special Commit + versionador
 * Author: @jansanchez
 * version: 0.1
 *
 * Estaticos: min|minificacion
 *
 */

var fs = require("fs"),
	exec = require("child_process").exec,
	extensions = ["js", "css", "png", "jpg", "gif"],
	hasStatic = false,
	gruntTask = "grunt despliegue",
	commitFile = "src/last_commit",
	gruntPath = 'frontend/grunt/',
	regular_expression = "^(Estaticos)\ ?:\ ?(min|minificacion)$";

console.log(' + Ejecutando Hook...');

var getRemainingText = function getRemainingText(str, level) {
	var newStr = str
	, index = 0;
	for (var i = 0; i < level; i++) {
		index = newStr.lastIndexOf('/');
		newStr = newStr.substr(0, index);
	};
	return newStr+'/';
};

var execute = function execute(command, callback) {
	exec(command, function (error, stdout, stderr) {
		callback(stdout);
	});
};

var getRegEx = function getRegEx(ext) {
	var preRegex = '',
		dot = /\./,
		dollarSign = /$/,
		finalpreRegex = null;

	for (i = 0; i < ext.length; i++) {
		preRegex += ext[i] + "|"
	}
	preRegex = preRegex.substr(0, preRegex.length - 1);
	preRegex = "(" + preRegex + ")";
	regex = new RegExp(dot.source + preRegex + dollarSign.source);
	//console.log(regex);
	return regex;
}

var makeNewCommit = function makeNewCommit(callback) {

	console.log("   - extensiones estaticas detectadas.");

	execute("git log -1 --format=%h", function (idCommit) {
		idCommit = idCommit.replace(/\n/gi, '');
		//console.log(idCommit);
		fs.writeFile(commitFile, idCommit, function (err) {
			if (err) {
				console.log(stderr);
				exitCode = -1;
				process.exit(exitCode);
			}
			var msg = 'Last Commit: Update "' + commitFile + '" to ' + idCommit;
			execute("git add .; git commit -m \"" + msg + "\" ", function () {
				console.log("   - " + msg);
				//callback();
				process.exit(0);
			});
		});
	});
};

module.exports.getLastCommit = function (callback) {
	var commit = {};
	execute("git rev-list --max-count=1 HEAD", function (last) {
		commit.last = last.replace("\n", "");
		execute("git rev-list --max-count=1 HEAD~1", function (penultimate) {
			commit.penultimate = penultimate.replace("\n", "");
			var diff = "git diff " + commit.last + " " + commit.penultimate + " --name-only";
			execute(diff, function (files) {
				files = files.replace(/\n/gi, ',');
				files = files.substr(0, files.length - 1);
				commit.files = files.split(',');
				callback(commit);
			});
		});
	});
};

module.exports.getLastCommit(function (obj) {
	//console.log(obj.files);
	for (var i = 0; i < obj.files.length; i++) {
		if (getRegEx(extensions).test(obj.files[i])) {
			hasStatic = true;
			break;
		}
	};

	// Estaticos: min|minificacion
	execute("git log -1 --pretty=%B", function (lastShortlog) {

		String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g, '');};

		var lastShortlog = lastShortlog.trim();
		var pattern = new RegExp(regular_expression);
		var result = pattern.test(lastShortlog);

		if (result == true) {

			console.log('   - inicio de minificaci칩n de est치ticos.');

			exec(gruntTask, {
				cwd: getRemainingText(__dirname, 2)+gruntPath
			}, function (err, stdout, stderr) {

				var exitCode = 0;

				console.log(stdout);

				if (err) {
					console.log(stderr);
					exitCode = -1;
					process.exit(exitCode);
				}else{
					hasStatic = false;
					makeNewCommit();
					console.log('   - fin de minificaci칩n de est치ticos.');
				}
			});
		}else{
			if (hasStatic == true) {
				makeNewCommit();
			};
		};
	});

});